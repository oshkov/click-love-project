from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, WebAppInfo


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
start_keyboard = [
    [
    KeyboardButton(text= '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', web_app= WebAppInfo(url='https://click-love.ru/registration/123'))
    ]
]
start_keyboard = ReplyKeyboardMarkup(keyboard= start_keyboard, resize_keyboard= True, is_persistent= True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
preview_form_keyboard =[
    [
        InlineKeyboardButton(text= '‚úÖ –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'create_form')
    ],
    [
        InlineKeyboardButton(text= 'üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å', callback_data= 'recreate_form')
    ]
]
preview_form_keyboard = InlineKeyboardMarkup(inline_keyboard= preview_form_keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ –º–µ–Ω—é
under_menu_keyboard = [
    [
    InlineKeyboardButton(text= 'üè† –ú–µ–Ω—é', callback_data= 'menu')
    ],
    [
    InlineKeyboardButton(text= '‚ù§Ô∏è –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', callback_data= 'check_forms')
    ]
]
under_menu_keyboard = InlineKeyboardMarkup(inline_keyboard= under_menu_keyboard)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
async def menu_keyboard(status):
    menu_keyboard =[
        [
            InlineKeyboardButton(text= 'üòä –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–æ—è –∞–Ω–∫–µ—Ç–∞', callback_data= 'my_form')
        ],
        [
            InlineKeyboardButton(text= '‚úçÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'recreate_form')
        ],
        [
            InlineKeyboardButton(text= 'üéÅ –ë–æ–Ω—É—Å—ã', callback_data= 'bonuses')
        ],
        [
            InlineKeyboardButton(text= '‚ù§Ô∏è –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', callback_data= 'check_forms')
        ]
    ]

    if status == 'open':
        menu_keyboard.insert(0,[InlineKeyboardButton(text= 'üôà –°–∫—Ä—ã—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'update_form_status')])
    elif status == 'closed':
        menu_keyboard.insert(0,[InlineKeyboardButton(text= 'ü§ó –û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'update_form_status')])
    elif status == 'wait':
        menu_keyboard.insert(0,[InlineKeyboardButton(text= '‚ùóÔ∏è –ê–Ω–∫–µ—Ç–∞ –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞', callback_data= 'update_form_status')])

    menu_keyboard = InlineKeyboardMarkup(inline_keyboard= menu_keyboard)
    return menu_keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –æ –ª–∞–π–∫–µ
async def show_form_keyboard(form_id, mutual= None):
    if mutual is not None:
        mutual = 'mutual'
    show_form_keyboard = [
        [
            InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å', callback_data= f'check_form_who_liked_me {form_id} {mutual}')
        ]
    ]
    show_form_keyboard = InlineKeyboardMarkup(inline_keyboard= show_form_keyboard)
    return show_form_keyboard









# –ù–û–í–´–ï –ö–õ–ê–í–ò–ê–¢–£–†–´




# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async def registrate(user_id, username):
    markup = [
        # [
        #     InlineKeyboardButton(text='‚ù§Ô∏è –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É', web_app=WebAppInfo(url=f'https://click-love.ru/registration/{user_id}'))
        # ],
        [
            InlineKeyboardButton(text='‚ù§Ô∏è –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É', url=f'https://click-love.ru/registration/{user_id}/{username}')
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
async def menu_keyboard(status):
    markup =[
        [
            InlineKeyboardButton(text= 'üòä –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–æ—è –∞–Ω–∫–µ—Ç–∞', callback_data= 'my_form')
        ],
        [
            InlineKeyboardButton(text= '‚úçÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'recreate_form')
        ],
        # [
        #     InlineKeyboardButton(text= 'üéÅ –ë–æ–Ω—É—Å—ã', callback_data= 'bonuses')
        # ],
        [
            InlineKeyboardButton(text= '‚ù§Ô∏è –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', callback_data= 'check_forms')
        ]
    ]

    if status == 'open':
        markup.insert(0,[InlineKeyboardButton(text= 'üôà –°–∫—Ä—ã—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'update_form_status')])
    elif status == 'closed':
        markup.insert(0,[InlineKeyboardButton(text= 'ü§ó –û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data= 'update_form_status')])

    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç
async def form_keyboard(id, more_photo= False, next_photo_num= 1):
    markup = [
        [
            InlineKeyboardButton(text= '‚ù§Ô∏è –ù—Ä–∞–≤–∏—Ç—Å—è', callback_data= f'rate like {id}'),
            InlineKeyboardButton(text= '‚ùå –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è', callback_data= f'rate dislike {id}')
        ],
        [
            InlineKeyboardButton(text= '‚ùï –ñ–∞–ª–æ–±–∞', callback_data= f'warn {id}'),
            InlineKeyboardButton(text= 'üè† –ú–µ–Ω—é', callback_data= 'menu')
        ]
    ]
    if more_photo:
        markup.insert(0,[InlineKeyboardButton(text= 'üì∏ –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ —Ñ–æ—Ç–æ', callback_data= f'check_photo {id} {next_photo_num}')])

    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç
async def recreate_keyboard(user_id, username):
    markup = [
        [
            InlineKeyboardButton(text='‚ù§Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', url=f'https://click-love.ru/registration/{user_id}/{username}')
        ],
        [
            InlineKeyboardButton(text= 'üè† –ú–µ–Ω—é', callback_data= 'menu')
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ª–∞–π–∫
async def form_after_like_keyboard(id, more_photo= False, next_photo_num= 1):
    markup = [
        [
            InlineKeyboardButton(text= '‚ù§Ô∏è –ù—Ä–∞–≤–∏—Ç—Å—è', callback_data= f'who_liked_me like {id}'),
            InlineKeyboardButton(text= '‚ùå –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è', callback_data= f'who_liked_me dislike {id}')
        ],
        [
            InlineKeyboardButton(text= '‚ùï –ñ–∞–ª–æ–±–∞', callback_data= f'warn {id}'),
            InlineKeyboardButton(text= 'üè† –ú–µ–Ω—é', callback_data= 'menu')
        ]
    ]
    if more_photo:
        markup.insert(0,[InlineKeyboardButton(text= 'üì∏ –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ —Ñ–æ—Ç–æ', callback_data= f'check_photo {id} {next_photo_num}')])

    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç
async def check_waited_forms(id, username):
    markup = [
        [
            InlineKeyboardButton(text= '‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data= f'accept_form {id}'),
        ],
        [
            InlineKeyboardButton(text= '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data= f'cancel_form {id} {username}'),
        ]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–∫–µ—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –∂–∞–ª–æ–≤–∞–ª–∏—Å—å
async def check_blocked_forms(id):
    markup = [
        [
            InlineKeyboardButton(text= 'üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data= f'unblock {id}'),
        ],
        [
            InlineKeyboardButton(text= 'üîê –ó–∞–±–∞–Ω–∏—Ç—å', callback_data= f'ban {id}'),
        ]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç –ø–æ—Å–ª–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏
async def recreate_keyboard_by_admins(user_id, username):
    markup = [
        [
            InlineKeyboardButton(text='‚ù§Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', url=f'https://click-love.ru/registration/{user_id}/{username}')
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard= markup)
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —é–∑–µ—Ä–Ω–µ–π–º–∞
check_username = [
    [
    InlineKeyboardButton(text= '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å @—é–∑–µ—Ä–Ω–µ–π–º', callback_data= 'check_username')
    ]
]
check_username = InlineKeyboardMarkup(inline_keyboard= check_username)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —é–∑–µ—Ä–Ω–µ–π–º–∞
check_bot = [
    [
    InlineKeyboardButton(text= '–Ø –Ω–µ —Ä–æ–±–æ—Ç', callback_data= 'check_bot')
    ]
]
check_bot = InlineKeyboardMarkup(inline_keyboard= check_bot)


# –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞ –≤ –±–æ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
admin_keyboard = [
[
    KeyboardButton(text='üîç –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É')
],
[
    KeyboardButton(text='üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
],
[
    KeyboardButton(text='üì© –†–∞—Å—Å—ã–ª–∫–∞')
]
]
admin_keyboard = ReplyKeyboardMarkup(keyboard=admin_keyboard, resize_keyboard=True, input_field_placeholder='–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞')


# –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
without_photo_keyboard = [
    [
        InlineKeyboardButton(text='–ë–µ–∑ —Ñ–æ—Ç–æ', callback_data='WithoutPhoto')
    ]
]
without_photo_keyboard = InlineKeyboardMarkup(inline_keyboard=without_photo_keyboard)

question_to_send = [
[
    InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', callback_data='SendToAll')
],
[
    InlineKeyboardButton(text='–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å', callback_data='DontSendToAll')
]
]
question_to_send = InlineKeyboardMarkup(inline_keyboard=question_to_send)

dont_send = [
[
    InlineKeyboardButton(text='–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å', callback_data='DontSendToAll')
]
]
dont_send = InlineKeyboardMarkup(inline_keyboard=dont_send)